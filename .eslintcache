[{"C:\\Users\\kempj\\code\\bhome\\src\\App.js":"1","C:\\Users\\kempj\\code\\bhome\\src\\index.js":"2","C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js":"3","C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js":"4","C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js":"5"},{"size":1275,"mtime":1607472837639,"results":"6","hashOfConfig":"7"},{"size":174,"mtime":1607301495574,"results":"8","hashOfConfig":"7"},{"size":3511,"mtime":1607470260693,"results":"9","hashOfConfig":"7"},{"size":3925,"mtime":1607467975309,"results":"10","hashOfConfig":"7"},{"size":468,"mtime":1607466002449,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"8jz011",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kempj\\code\\bhome\\src\\App.js",["24","25"],"import './App.css';\nimport {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { spacing } from '@material-ui/system'\nimport Data from './utils/Data'\nimport SearchAppBar from './components/AppBar'\nimport Directory from './components/Directory'\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  const [data, setData] = useState(Data)\n  const [filteredData, setFilteredData] = useState([])\n  const [search, setSearch] = useState('')\n  const classes = useStyles();\n  const handleSearch = (event) => {\n      setSearch(event.target.value)\n      const filtered = data.filter(item=>{\n        return item.program.toLowerCase().includes(search.toLowerCase())\n      })\n      setFilteredData(filtered)\n    \n  }\n  return (\n    <div>\n    <SearchAppBar value={search} handleSearch={handleSearch}/>\n    <Grid container className={classes.root} >\n      <Box mt={10}>\n        <Directory data={(filteredData.length > 0 ? filteredData : data)} />\n      </Box>\n    </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\kempj\\code\\bhome\\src\\index.js",[],"C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js",["26"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js",["27"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport HealingIcon from '@material-ui/icons/Healing';\r\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default function DirectoryCard({ data }) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const avatarGen = (category) =>{\r\n    if(category === 'Housing'){\r\n      return <HomeWorkIcon />\r\n    }else if(category === 'Substance use'){\r\n      return <HealingIcon />\r\n    }else if (category === 'Food'){\r\n      return <RestaurantIcon />\r\n    }else if (category ==='Mental Health'){\r\n      return <EmojiEmotionsIcon />\r\n    }else if (category === 'Multi'){\r\n      return <DoneAllIcon />\r\n    }else{\r\n      return 'O'\r\n    }\r\n    //     Housing\r\n// Substance use\r\n// Food\r\n// Mental Health\r\n// Multi\r\n// Other\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {avatarGen(data.Category)}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MapIcon/>\r\n          </IconButton>\r\n        }\r\n        title={data.program}\r\n        subheader={data.organization}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"http://placekitten.com/g/200/300\"\r\n        title=\"Org image\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          All the little tidbits on the organization. What they offer, who they target, mission statement, whatever. Short and sweet and getting people clickable\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <p>hours:</p>\r\n          <p>{data.hours}</p>\r\n          <p>Address:{data.address}</p>\r\n          <p>Phone: {data.phone}</p>\r\n          <p>Website:<a href={`${data.web}`} target=\"_blank\">{data.web}</a></p>\r\n          <p>Services: {data.services}</p>\r\n          <p>Target: {data.target}</p>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js",[],{"ruleId":"28","severity":1,"message":"29","line":4,"column":10,"nodeType":"30","messageId":"31","endLine":4,"endColumn":17},{"ruleId":"28","severity":1,"message":"32","line":24,"column":16,"nodeType":"30","messageId":"31","endLine":24,"endColumn":23},{"ruleId":"28","severity":1,"message":"33","line":12,"column":8,"nodeType":"30","messageId":"31","endLine":12,"endColumn":15},{"ruleId":"34","severity":1,"message":"35","line":119,"column":46,"nodeType":"36","endLine":119,"endColumn":61},"no-unused-vars","'spacing' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","'Tooltip' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]