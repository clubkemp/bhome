[{"C:\\Users\\kempj\\code\\bhome\\src\\App.js":"1","C:\\Users\\kempj\\code\\bhome\\src\\index.js":"2","C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js":"3","C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js":"4","C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js":"5","C:\\Users\\kempj\\code\\bhome\\src\\components\\FilterBtns\\index.js":"6"},{"size":1846,"mtime":1607546969027,"results":"7","hashOfConfig":"8"},{"size":174,"mtime":1607301495574,"results":"9","hashOfConfig":"8"},{"size":3395,"mtime":1607473560822,"results":"10","hashOfConfig":"8"},{"size":3799,"mtime":1607473560826,"results":"11","hashOfConfig":"8"},{"size":449,"mtime":1607473560825,"results":"12","hashOfConfig":"8"},{"size":1435,"mtime":1607545748081,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8jz011",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kempj\\code\\bhome\\src\\App.js",["27","28","29"],"C:\\Users\\kempj\\code\\bhome\\src\\index.js",[],"C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js",["30"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js",["31"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MapIcon from '@material-ui/icons/Map';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport HealingIcon from '@material-ui/icons/Healing';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function DirectoryCard({ data }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const avatarGen = (category) =>{\n    if(category === 'Housing'){\n      return <HomeWorkIcon />\n    }else if(category === 'Substance use'){\n      return <HealingIcon />\n    }else if (category === 'Food'){\n      return <RestaurantIcon />\n    }else if (category ==='Mental Health'){\n      return <EmojiEmotionsIcon />\n    }else if (category === 'Multi'){\n      return <DoneAllIcon />\n    }else{\n      return 'O'\n    }\n    //     Housing\n// Substance use\n// Food\n// Mental Health\n// Multi\n// Other\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {avatarGen(data.Category)}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MapIcon/>\n          </IconButton>\n        }\n        title={data.program}\n        subheader={data.organization}\n      />\n      <CardMedia\n        className={classes.media}\n        image=\"http://placekitten.com/g/200/300\"\n        title=\"Org image\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          All the little tidbits on the organization. What they offer, who they target, mission statement, whatever. Short and sweet and getting people clickable\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <p>hours:</p>\n          <p>{data.hours}</p>\n          <p>Address:{data.address}</p>\n          <p>Phone: {data.phone}</p>\n          <p>Website:<a href={`${data.web}`} target=\"_blank\">{data.web}</a></p>\n          <p>Services: {data.services}</p>\n          <p>Target: {data.target}</p>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js",[],"C:\\Users\\kempj\\code\\bhome\\src\\components\\FilterBtns\\index.js",[],{"ruleId":"32","severity":1,"message":"33","line":13,"column":10,"nodeType":"34","messageId":"35","endLine":13,"endColumn":17},{"ruleId":"32","severity":1,"message":"36","line":28,"column":16,"nodeType":"34","messageId":"35","endLine":28,"endColumn":23},{"ruleId":"37","severity":1,"message":"38","line":43,"column":5,"nodeType":"39","endLine":43,"endColumn":13,"suggestions":"40"},{"ruleId":"32","severity":1,"message":"41","line":12,"column":8,"nodeType":"34","messageId":"35","endLine":12,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":119,"column":46,"nodeType":"44","endLine":119,"endColumn":61},"no-unused-vars","'spacing' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["45"],"'Tooltip' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"46","fix":"47"},"Update the dependencies array to be: [data, filter]",{"range":"48","text":"49"},[1152,1160],"[data, filter]"]