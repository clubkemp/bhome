[{"C:\\Users\\kempj\\code\\bhome\\src\\components\\MapComp\\index.js":"1","C:\\Users\\kempj\\code\\bhome\\src\\App.js":"2","C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js":"3","C:\\Users\\kempj\\code\\bhome\\src\\components\\NavTabs\\index.js":"4","C:\\Users\\kempj\\code\\bhome\\src\\components\\FilterBtns\\index.js":"5","C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js":"6","C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js":"7","C:\\Users\\kempj\\code\\bhome\\src\\index.js":"8","C:\\Users\\kempj\\code\\bhome\\src\\components\\Welcome\\index.js":"9"},{"size":6877,"mtime":1611862358764,"results":"10","hashOfConfig":"11"},{"size":3740,"mtime":1613418209307,"results":"12","hashOfConfig":"11"},{"size":3210,"mtime":1611791813696,"results":"13","hashOfConfig":"11"},{"size":1548,"mtime":1611792960659,"results":"14","hashOfConfig":"11"},{"size":2310,"mtime":1610244587977,"results":"15","hashOfConfig":"11"},{"size":560,"mtime":1611790368249,"results":"16","hashOfConfig":"11"},{"size":7726,"mtime":1613421198703,"results":"17","hashOfConfig":"11"},{"size":174,"mtime":1607301495574,"results":"18","hashOfConfig":"11"},{"size":2969,"mtime":1611876779111,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8jz011",{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kempj\\code\\bhome\\src\\components\\MapComp\\index.js",["41","42"],"C:\\Users\\kempj\\code\\bhome\\src\\App.js",["43","44","45","46","47"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js",["48","49","50","51","52","53"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\NavTabs\\index.js",["54","55","56"],"import React, {useState, useEffect} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport MapIcon from '@material-ui/icons/Map';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    minWidth:200,\n    maxWidth: 200,\n  },\n  tab:{\n    minWidth: 5,\n    width: 50\n  }\n});\n\nexport default function NavTabs(props) {\n  const classes = useStyles();\n  // setup the initial value of the view: 0=list 1=map\n  const [value, setValue] = useState(0);\n\n  useEffect(()=>{\n    if(props.view===\"list\"){\n      setValue(0)\n    }else{\n      setValue(1)\n    }\n  },[props.view])\n  \n  // handle the tab change\n  const handleChange = (event, newValue) => {\n    //fire the passed down handleView action based on the new value\n    props.handleView(newValue)\n    // update the value based on the tab\n    setValue(newValue);\n  };\n\n  return (\n      <Tabs\n        value={value}\n        className={classes.root}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        aria-label=\"icon label tabs example\"\n      >\n        <Tab className={classes.tab} icon={<ListAltIcon />} label=\"LIST\" />\n        <Tab className={classes.tab} icon={<MapIcon />} label=\"MAP\" />\n      </Tabs>\n  );\n}\n","C:\\Users\\kempj\\code\\bhome\\src\\components\\FilterBtns\\index.js",["57"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js",[],"C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js",["58"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Divider from '@material-ui/core/Divider';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red, green, blue, yellow, purple, teal  } from '@material-ui/core/colors';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MapIcon from '@material-ui/icons/Map';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport HealingIcon from '@material-ui/icons/Healing';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport LabelIcon from '@material-ui/icons/Label';\nimport PeopleIcon from '@material-ui/icons/People';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  divider:{\n    margin: \"25px 0px\"\n  }\n}));\n// takes in the item of data being mapped over as data\nexport default function DirectoryCard({ data, handleZoomTo }) {\n  const classes = useStyles();\n  // sets up the state for if a cards info is expanded \n  const [expanded, setExpanded] = useState(false);\n  // toggles the expansion on click\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  // setup the var for the color of background\n  const color = {backgroundColor:green[0]}\n  const banner = {height:\"75px\"}\n  // toggles the avatar to match the category\n  const avatarGen = (category) =>{\n    if(category === 'Housing'){\n      color.backgroundColor = red[500]\n      banner.backgroundColor = red[500]\n      return <HomeWorkIcon  />\n    }else if(category === 'Substance use'){\n      color.backgroundColor = green[500]\n      banner.backgroundColor = green[500]\n      return <HealingIcon />\n    }else if (category === 'Food'){\n      color.backgroundColor = purple[500]\n      banner.backgroundColor = purple[500]\n      return <RestaurantIcon />\n    }else if (category ==='Mental Health'){\n      color.backgroundColor = teal[500]\n      banner.backgroundColor = teal[500]\n      return <EmojiEmotionsIcon />\n    }else if (category === 'Multi'){\n      color.backgroundColor = yellow[800]\n      banner.backgroundColor = yellow[800]\n      return <DoneAllIcon />\n    }else{\n      color.backgroundColor = blue[500]\n      banner.backgroundColor = blue[500]\n      return <MoreVertIcon />\n    }\n  }\n  // const avatarColor = (category) =>{\n  //   if(category === 'Housing'){\n  //     return { backgroundColor: green[500] }\n  //   }else if(category === 'Substance use'){\n  //     return { backgroundColor: red[500] }\n  //   }else if (category === 'Food'){\n  //     return \n  //   }else if (category ==='Mental Health'){\n  //     return \n  //   }else if (category === 'Multi'){\n  //     return \n  //   }else{\n  //     return \n  //   }\n  // }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" style={color}>\n            {avatarGen(data.Category)}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\" onClick={e=>handleZoomTo(data.lat, data.long)}>\n            <MapIcon/>\n          </IconButton>\n        }\n        title={data.program}\n        subheader={data.organization}\n      />\n      <Grid container >\n        <Grid item container xs={12} alignItems=\"center\" justify=\"center\" style={banner} >\n            <Typography variant=\"h5\" style={{ color: \"white\" }}>\n              {data.Category}\n            </Typography>\n        </Grid>\n      </Grid>\n      {/* <CardMedia\n        className={classes.media}\n        image=\"http://placekitten.com/g/200/300\"\n        title=\"Org image\"\n      /> */}\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {data.blurb.length <= 100 ? data.blurb :`${data.blurb.substring(0,100)}...`}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {data.blurb.length <= 100 ? null :`...${data.blurb.substring(100,data.blurb.length)}`}\n        </Typography>\n        <Divider variant=\"middle\" className={classes.divider} />\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <AccessTimeIcon />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                {data.hours}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <PlaceIcon />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                {data.address}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <PhoneIcon /> \n            </Grid>\n            <Grid item>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              {data.phone}\n            </Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <LanguageIcon />\n            </Grid>\n            <Grid item>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <a href={`${data.web}`} target=\"_blank\">{data.program} Website</a>\n            </Typography> \n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <LabelIcon /> \n            </Grid>\n            <Grid item>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              {data.services}\n            </Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <PeopleIcon /> \n            </Grid>\n            <Grid item>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              {data.target}\n            </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","C:\\Users\\kempj\\code\\bhome\\src\\index.js",[],["59","60"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\Welcome\\index.js",[],{"ruleId":"61","severity":1,"message":"62","line":12,"column":8,"nodeType":"63","messageId":"64","endLine":12,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":126,"column":59,"nodeType":"67","endLine":126,"endColumn":74},{"ruleId":"61","severity":1,"message":"68","line":12,"column":8,"nodeType":"63","messageId":"64","endLine":12,"endColumn":18},{"ruleId":"61","severity":1,"message":"69","line":16,"column":10,"nodeType":"63","messageId":"64","endLine":16,"endColumn":17},{"ruleId":"61","severity":1,"message":"70","line":29,"column":16,"nodeType":"63","messageId":"64","endLine":29,"endColumn":23},{"ruleId":"61","severity":1,"message":"71","line":46,"column":9,"nodeType":"63","messageId":"64","endLine":46,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":58,"column":5,"nodeType":"74","endLine":58,"endColumn":13,"suggestions":"75"},{"ruleId":"61","severity":1,"message":"76","line":2,"column":16,"nodeType":"63","messageId":"64","endLine":2,"endColumn":24},{"ruleId":"61","severity":1,"message":"77","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":25},{"ruleId":"61","severity":1,"message":"78","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":20},{"ruleId":"61","severity":1,"message":"79","line":10,"column":8,"nodeType":"63","messageId":"64","endLine":10,"endColumn":19},{"ruleId":"61","severity":1,"message":"80","line":12,"column":8,"nodeType":"63","messageId":"64","endLine":12,"endColumn":15},{"ruleId":"61","severity":1,"message":"81","line":13,"column":8,"nodeType":"63","messageId":"64","endLine":13,"endColumn":15},{"ruleId":"61","severity":1,"message":"82","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},{"ruleId":"61","severity":1,"message":"83","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":17},{"ruleId":"61","severity":1,"message":"84","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":21},{"ruleId":"61","severity":1,"message":"76","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":24},{"ruleId":null,"fatal":true,"severity":2,"message":"85","line":141,"column":78},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},"no-unused-vars","'DirectoryCard' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Typography' is defined but never used.","'spacing' is defined but never used.","'setData' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["90"],"'useState' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'ListAltIcon' is defined but never used.","'MapIcon' is defined but never used.","'Tooltip' is defined but never used.","'Paper' is defined but never used.","'PhoneIcon' is defined but never used.","'PersonPinIcon' is defined but never used.","Parsing error: Identifier directly after number\n\n  139 |       <CardContent>\n  140 |         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n> 141 |           {data.blurb.length <= 100 ? data.blurb :`${data.blurb.substring(0,1gi00)}...`}\n      |                                                                              ^\n  142 |         </Typography>\n  143 |       </CardContent>\n  144 |       <CardActions disableSpacing>","no-native-reassign",["91"],"no-negated-in-lhs",["92"],{"desc":"93","fix":"94"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data, filter]",{"range":"95","text":"96"},[2012,2020],"[data, filter]"]