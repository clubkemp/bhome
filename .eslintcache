[{"C:\\Users\\kempj\\code\\bhome\\src\\components\\MapComp\\index.js":"1","C:\\Users\\kempj\\code\\bhome\\src\\App.js":"2","C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js":"3","C:\\Users\\kempj\\code\\bhome\\src\\components\\NavTabs\\index.js":"4","C:\\Users\\kempj\\code\\bhome\\src\\components\\FilterBtns\\index.js":"5","C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js":"6","C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js":"7","C:\\Users\\kempj\\code\\bhome\\src\\index.js":"8","C:\\Users\\kempj\\code\\bhome\\src\\components\\Welcome\\index.js":"9"},{"size":6877,"mtime":1611862358764,"results":"10","hashOfConfig":"11"},{"size":3705,"mtime":1611868980722,"results":"12","hashOfConfig":"11"},{"size":3210,"mtime":1611862358759,"results":"13","hashOfConfig":"11"},{"size":1548,"mtime":1611862358771,"results":"14","hashOfConfig":"11"},{"size":2310,"mtime":1610244587977,"results":"15","hashOfConfig":"11"},{"size":526,"mtime":1610151452116,"results":"16","hashOfConfig":"11"},{"size":7376,"mtime":1611862358762,"results":"17","hashOfConfig":"11"},{"size":174,"mtime":1607301495574,"results":"18","hashOfConfig":"11"},{"size":3060,"mtime":1611876108053,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8jz011",{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kempj\\code\\bhome\\src\\components\\MapComp\\index.js",["40","41"],"C:\\Users\\kempj\\code\\bhome\\src\\App.js",["42","43","44","45","46"],"import './App.css';\nimport {useState, useEffect} from 'react'\n\n\nimport Data from './utils/Data'\nimport SearchAppBar from './components/AppBar'\nimport Directory from './components/Directory'\nimport FilterBtns from './components/FilterBtns'\nimport MapComp from './components/MapComp'\nimport Welcome from './components/Welcome'\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { spacing } from '@material-ui/system'\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction App() {\n  // set the data as the data imported above form data.json\n  const [data, setData] = useState(Data)\n  // used to control if the user sees the list or the map\n  const [view, setView] = useState(\"list\")\n  // used to filter the data based on the cateogy\n  // 'Housing', 'Substance use','Food', 'Mental Health', 'Multi', 'Other'\n  const [filter, setFilter] = useState([])\n  // stores the filtered data as a new array keep the original data intact\n  const [filteredData, setFilteredData] = useState([])\n  \n  // search term to match with the filtered data\n  const [search, setSearch] = useState('')\n  //result of the filtered search\n  const [searchedData, setSearchedData] = useState([])\n\n  const [mapExtent, setMapExtent] = useState({bounds:[48.798044, -122.282295], zoom:11})\n  \n  // the styles defined above\n  const classes = useStyles();\n\n  // on render, or DOM update...\n  useEffect(()=>{\n    // creat a filtered variable to hold filtered data and use filter method to fill it based on filter state\n    const filtered = data.filter(item =>{\n      return filter.includes(item.Category)\n    })\n    // set the filteredData based on the filter state\n    setFilteredData(filtered)\n    // only rerun the effect if filter is changed\n  },[filter])\n  // handle the filter change\n  const handleFilters = (filters) =>{\n    // set to array of filter params\n    setFilter(filters)\n      \n  }\n  // handle the search event\n  const handleSearch = (event) => {\n    // handles the event target change for searchbar\n    setSearch(event.target.value)\n    // set the search var equal to a data filter on filteredData\n    const searched = filteredData.filter(item=>{\n      return item.program.toLowerCase().includes(search.toLowerCase())\n    })\n    // setup the search data state change\n    setSearchedData(searched)\n    \n  }\n  // hanldes the view change when a user toggles between list and map\n  const handleView = (viewToggle) =>{\n    if(viewToggle === 0){\n      setView(\"list\")\n      setMapExtent({bounds:[48.798044, -122.282295], zoom:11})\n    }else if(viewToggle === 1){\n      setView(\"map\")\n    }\n  }\n\n  const handleZoomTo = (lat, long) =>{\n    console.log(lat, long)\n    setMapExtent({bounds:[lat, long], zoom:18})\n    setView(\"map\")\n  }\n  return (\n    <div>\n    <SearchAppBar value={search} handleSearch={handleSearch} handleView={handleView} view={view}/>\n    <Grid container justify=\"center\" spacing={3}>\n      <Grid container item xs={12} justify=\"center\">\n        <Box mt={10}>\n          <FilterBtns filter={filter} handleFilters={handleFilters} mx=\"auto\"/>\n        </Box>\n      </Grid>\n      <Grid item container justify=\"center\">\n        {filter.length===0 ? <Welcome />: null}\n      </Grid>\n      {(view===\"list\" ? <Directory handleZoomTo={handleZoomTo} data={(search.length > 0 ? searchedData : filteredData)} /> : <MapComp mapExtent={mapExtent} data={(search.length > 0 ? searchedData : filteredData)}/>)} \n    </Grid>\n   \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js",["47","48","49","50","51","52"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\NavTabs\\index.js",["53","54","55"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\FilterBtns\\index.js",["56"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js",[],"C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js",["57","58"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red, green, blue, yellow, purple, teal  } from '@material-ui/core/colors';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MapIcon from '@material-ui/icons/Map';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport HealingIcon from '@material-ui/icons/Healing';\nimport HomeWorkIcon from '@material-ui/icons/HomeWork';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport LabelIcon from '@material-ui/icons/Label';\nimport PeopleIcon from '@material-ui/icons/People';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  // avatar: {\n  //   backgroundColor: red[500],\n  // },\n}));\n// takes in the item of data being mapped over as data\nexport default function DirectoryCard({ data, handleZoomTo }) {\n  const classes = useStyles();\n  // sets up the state for if a cards info is expanded \n  const [expanded, setExpanded] = useState(false);\n  // toggles the expansion on click\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  // setup the var for the color of background\n  const color = {backgroundColor:green[0]}\n  const banner = {height:\"75px\"}\n  // toggles the avatar to match the category\n  const avatarGen = (category) =>{\n    if(category === 'Housing'){\n      color.backgroundColor = red[500]\n      banner.backgroundColor = red[500]\n      return <HomeWorkIcon  />\n    }else if(category === 'Substance use'){\n      color.backgroundColor = green[500]\n      banner.backgroundColor = green[500]\n      return <HealingIcon />\n    }else if (category === 'Food'){\n      color.backgroundColor = purple[500]\n      banner.backgroundColor = purple[500]\n      return <RestaurantIcon />\n    }else if (category ==='Mental Health'){\n      color.backgroundColor = teal[500]\n      banner.backgroundColor = teal[500]\n      return <EmojiEmotionsIcon />\n    }else if (category === 'Multi'){\n      color.backgroundColor = yellow[800]\n      banner.backgroundColor = yellow[800]\n      return <DoneAllIcon />\n    }else{\n      color.backgroundColor = blue[500]\n      banner.backgroundColor = blue[500]\n      return <MoreVertIcon />\n    }\n  }\n  // const avatarColor = (category) =>{\n  //   if(category === 'Housing'){\n  //     return { backgroundColor: green[500] }\n  //   }else if(category === 'Substance use'){\n  //     return { backgroundColor: red[500] }\n  //   }else if (category === 'Food'){\n  //     return \n  //   }else if (category ==='Mental Health'){\n  //     return \n  //   }else if (category === 'Multi'){\n  //     return \n  //   }else{\n  //     return \n  //   }\n  // }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" style={color}>\n            {avatarGen(data.Category)}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\" onClick={e=>handleZoomTo(data.lat, data.long)}>\n            <MapIcon/>\n          </IconButton>\n        }\n        title={data.program}\n        subheader={data.organization}\n      />\n      <Grid container >\n        <Grid item container xs={12} alignItems=\"center\" justify=\"center\" style={banner} >\n            <Typography variant=\"h5\" style={{ color: \"white\" }}>\n              {data.Category}\n            </Typography>\n        </Grid>\n      </Grid>\n      {/* <CardMedia\n        className={classes.media}\n        image=\"http://placekitten.com/g/200/300\"\n        title=\"Org image\"\n      /> */}\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {data.blurb}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <AccessTimeIcon />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                {data.hours}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <PlaceIcon />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                {data.address}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <PhoneIcon /> \n            </Grid>\n            <Grid item>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              {data.phone}\n            </Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <LanguageIcon />\n            </Grid>\n            <Grid item>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              <a href={`${data.web}`} target=\"_blank\">{data.program} Website</a>\n            </Typography> \n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <LabelIcon /> \n            </Grid>\n            <Grid item>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              {data.services}\n            </Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <PeopleIcon /> \n            </Grid>\n            <Grid item>\n            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n              {data.target}\n            </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","C:\\Users\\kempj\\code\\bhome\\src\\index.js",[],"C:\\Users\\kempj\\code\\bhome\\src\\components\\Welcome\\index.js",[],{"ruleId":"59","severity":1,"message":"60","line":12,"column":8,"nodeType":"61","messageId":"62","endLine":12,"endColumn":21},{"ruleId":"63","severity":1,"message":"64","line":126,"column":59,"nodeType":"65","endLine":126,"endColumn":74},{"ruleId":"59","severity":1,"message":"66","line":12,"column":8,"nodeType":"61","messageId":"62","endLine":12,"endColumn":18},{"ruleId":"59","severity":1,"message":"67","line":16,"column":10,"nodeType":"61","messageId":"62","endLine":16,"endColumn":17},{"ruleId":"59","severity":1,"message":"68","line":29,"column":16,"nodeType":"61","messageId":"62","endLine":29,"endColumn":23},{"ruleId":"59","severity":1,"message":"69","line":46,"column":9,"nodeType":"61","messageId":"62","endLine":46,"endColumn":16},{"ruleId":"70","severity":1,"message":"71","line":57,"column":5,"nodeType":"72","endLine":57,"endColumn":13,"suggestions":"73"},{"ruleId":"59","severity":1,"message":"74","line":2,"column":16,"nodeType":"61","messageId":"62","endLine":2,"endColumn":24},{"ruleId":"59","severity":1,"message":"75","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":25},{"ruleId":"59","severity":1,"message":"76","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":20},{"ruleId":"59","severity":1,"message":"77","line":10,"column":8,"nodeType":"61","messageId":"62","endLine":10,"endColumn":19},{"ruleId":"59","severity":1,"message":"78","line":12,"column":8,"nodeType":"61","messageId":"62","endLine":12,"endColumn":15},{"ruleId":"59","severity":1,"message":"79","line":13,"column":8,"nodeType":"61","messageId":"62","endLine":13,"endColumn":15},{"ruleId":"59","severity":1,"message":"80","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"59","severity":1,"message":"81","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":17},{"ruleId":"59","severity":1,"message":"82","line":9,"column":8,"nodeType":"61","messageId":"62","endLine":9,"endColumn":21},{"ruleId":"59","severity":1,"message":"74","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":24},{"ruleId":"59","severity":1,"message":"83","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":193,"column":39,"nodeType":"65","endLine":193,"endColumn":54},"no-unused-vars","'DirectoryCard' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Typography' is defined but never used.","'spacing' is defined but never used.","'setData' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'useState' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'ListAltIcon' is defined but never used.","'MapIcon' is defined but never used.","'Tooltip' is defined but never used.","'Paper' is defined but never used.","'PhoneIcon' is defined but never used.","'PersonPinIcon' is defined but never used.","'CardMedia' is defined but never used.",{"desc":"85","fix":"86"},"Update the dependencies array to be: [data, filter]",{"range":"87","text":"88"},[1977,1985],"[data, filter]"]