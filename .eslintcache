[{"C:\\Users\\kempj\\code\\bhome\\src\\components\\MapComp\\index.js":"1","C:\\Users\\kempj\\code\\bhome\\src\\App.js":"2","C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js":"3","C:\\Users\\kempj\\code\\bhome\\src\\components\\NavTabs\\index.js":"4","C:\\Users\\kempj\\code\\bhome\\src\\components\\FilterBtns\\index.js":"5","C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js":"6","C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js":"7"},{"size":5305,"mtime":1610161306893,"results":"8","hashOfConfig":"9"},{"size":3065,"mtime":1610151062446,"results":"10","hashOfConfig":"9"},{"size":3192,"mtime":1610150767017,"results":"11","hashOfConfig":"9"},{"size":1415,"mtime":1610150683668,"results":"12","hashOfConfig":"9"},{"size":1545,"mtime":1610151394670,"results":"13","hashOfConfig":"9"},{"size":526,"mtime":1610151452116,"results":"14","hashOfConfig":"9"},{"size":6948,"mtime":1610164534262,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"8jz011",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kempj\\code\\bhome\\src\\components\\MapComp\\index.js",["32","33"],"import React from 'react'\nimport \"./style.css\";\nimport Grid from '@material-ui/core/Grid';\nimport {\n    MapContainer,\n    TileLayer,\n    Marker,\n    Popup,\n    Tooltip\n  } from \"react-leaflet\";\nimport DirectoryCard from '../DirectoryCard'\n\nimport Typography from '@material-ui/core/Typography';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport LabelIcon from '@material-ui/icons/Label';\nimport PeopleIcon from '@material-ui/icons/People';\n\nexport default function MapComp({ data }) {\n    \n    return (\n        <Grid container item spacing={3} justify=\"center\">\n            <div id=\"mapWindow\">\n                <MapContainer center={[48.798044, -122.282295]} zoom={10} scrollWheelZoom={false}>\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {data.map((marker) => (\n                    <Marker\n\n                        // key={`marker-${marker.id}`}\n                        // id={marker.id}\n                        eventHandlers={{\n                        click: (e)=>{\n                            e.target.openPopup()\n                        }\n                        }}\n                        position={{\n                        lat: marker.lat,\n                        lng: marker.long,\n                        }}\n                    >\n                        <Tooltip>{marker.program}</Tooltip>\n                        <Popup>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                <AccessTimeIcon />\n                                </Grid>\n                                <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                    {marker.hours}\n                                </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                <PlaceIcon />\n                                </Grid>\n                                <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                    {marker.address}\n                                </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                <PhoneIcon /> \n                                </Grid>\n                                <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                {marker.phone}\n                                </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                <LanguageIcon />\n                                </Grid>\n                                <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                <a href={`${marker.web}`} target=\"_blank\">{marker.program} Website</a>\n                                </Typography> \n                                </Grid>\n                            </Grid>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                <LabelIcon /> \n                                </Grid>\n                                <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                {marker.services}\n                                </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                <PeopleIcon /> \n                                </Grid>\n                                <Grid item>\n                                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                                {marker.target}\n                                </Typography>\n                                </Grid>\n                            </Grid>\n                        {/* <HandlePointClick id={marker.id} /> */}\n                        {/* <div className=\"popupPlace\">{marker.program}</div> */}\n                        {/* if edit state is actie give update and delte functionality */}\n                        </Popup>\n                    </Marker>\n                    ))}\n                </MapContainer>\n            </div>\n        </Grid>\n    )\n}\n","C:\\Users\\kempj\\code\\bhome\\src\\App.js",["34","35","36","37"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\AppBar\\index.js",["38","39","40","41","42","43"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\NavTabs\\index.js",["44","45","46"],"import React, {useState} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport MapIcon from '@material-ui/icons/Map';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    minWidth:200,\n    maxWidth: 200,\n  },\n  tab:{\n    minWidth: 5,\n    width: 50\n  }\n});\n\nexport default function NavTabs(props) {\n  const classes = useStyles();\n  // setup the initial value of the view: 0=list 1=map\n  const [value, setValue] = useState(0);\n  // handle the tab change\n  const handleChange = (event, newValue) => {\n    //fire the passed down handleView action based on the new value\n    props.handleView(newValue)\n    // update the value based on the tab\n    setValue(newValue);\n  };\n\n  return (\n      <Tabs\n        value={value}\n        className={classes.root}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        aria-label=\"icon label tabs example\"\n      >\n        <Tab className={classes.tab} icon={<ListAltIcon />} label=\"LIST\" />\n        <Tab className={classes.tab} icon={<MapIcon />} label=\"MAP\" />\n      </Tabs>\n  );\n}\n","C:\\Users\\kempj\\code\\bhome\\src\\components\\FilterBtns\\index.js",["47"],"C:\\Users\\kempj\\code\\bhome\\src\\components\\Directory\\index.js",[],"C:\\Users\\kempj\\code\\bhome\\src\\components\\DirectoryCard\\index.js",["48"],{"ruleId":"49","severity":1,"message":"50","line":11,"column":8,"nodeType":"51","messageId":"52","endLine":11,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":84,"column":59,"nodeType":"55","endLine":84,"endColumn":74},{"ruleId":"49","severity":1,"message":"56","line":14,"column":10,"nodeType":"51","messageId":"52","endLine":14,"endColumn":17},{"ruleId":"49","severity":1,"message":"57","line":27,"column":16,"nodeType":"51","messageId":"52","endLine":27,"endColumn":23},{"ruleId":"49","severity":1,"message":"58","line":41,"column":9,"nodeType":"51","messageId":"52","endLine":41,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":52,"column":5,"nodeType":"61","endLine":52,"endColumn":13,"suggestions":"62"},{"ruleId":"49","severity":1,"message":"63","line":2,"column":16,"nodeType":"51","messageId":"52","endLine":2,"endColumn":24},{"ruleId":"49","severity":1,"message":"64","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":25},{"ruleId":"49","severity":1,"message":"65","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":20},{"ruleId":"49","severity":1,"message":"66","line":10,"column":8,"nodeType":"51","messageId":"52","endLine":10,"endColumn":19},{"ruleId":"49","severity":1,"message":"67","line":12,"column":8,"nodeType":"51","messageId":"52","endLine":12,"endColumn":15},{"ruleId":"49","severity":1,"message":"68","line":13,"column":8,"nodeType":"51","messageId":"52","endLine":13,"endColumn":15},{"ruleId":"49","severity":1,"message":"69","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":13},{"ruleId":"49","severity":1,"message":"70","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":17},{"ruleId":"49","severity":1,"message":"71","line":9,"column":8,"nodeType":"51","messageId":"52","endLine":9,"endColumn":21},{"ruleId":"49","severity":1,"message":"63","line":1,"column":16,"nodeType":"51","messageId":"52","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"54","line":180,"column":39,"nodeType":"55","endLine":180,"endColumn":54},"no-unused-vars","'DirectoryCard' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'spacing' is defined but never used.","'setData' is assigned a value but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'useState' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'ListAltIcon' is defined but never used.","'MapIcon' is defined but never used.","'Tooltip' is defined but never used.","'Paper' is defined but never used.","'PhoneIcon' is defined but never used.","'PersonPinIcon' is defined but never used.",{"desc":"73","fix":"74"},"Update the dependencies array to be: [data, filter]",{"range":"75","text":"76"},[1783,1791],"[data, filter]"]